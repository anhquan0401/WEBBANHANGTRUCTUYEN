@model IEnumerable<WebApplication1.ViewModels.HangHoaVM>
@{
    ViewData["Title"] = "Shop";
    Layout = "_DanhSachHangHoa";
    var totalPages = ViewBag.TotalPages;
    var currentPages = ViewBag.CurrentPage;
    var loais = ViewBag.Loais;

}

<!-- Single Page Header start -->
@section HeaderStart {
    <div class="container-fluid page-header py-5">
        <h1 class="text-center text-white display-6">Shop</h1>
        <ol class="breadcrumb justify-content-center mb-0">
            <li class="breadcrumb-item"><a href="#">Home</a></li>
            <li class="breadcrumb-item"><a href="#">Pages</a></li>
            <li class="breadcrumb-item active text-white">Shop</li>
        </ol>
    </div>
}
<!-- Single Page Header End -->

<!-- Fruits Shop Start-->
@await Html.PartialAsync("ProductsItem", Model)
<!-- Fruits Shop End-->

@* Start pagination *@
<div class="col-12">
    <div class="pagination d-flex justify-content-center mt-5">
        @if (currentPages == 1)
        {
            <a href="#" class="disabled rounded">&laquo;</a>
        }
        else
        {
            <a href="@Url.Action("Index", new {loai = loais, page = currentPages - 1})" class="rounded">&laquo;</a>
        }

        @* 1 2 3 4 5 ..  *@
        @for (int i = 1; i <= totalPages; i++)
        {
            <a href="@Url.Action("Index", new {loai = loais, page = i})" class="@(i == currentPages ? "active" : "") rounded">@i</a>
        }


        @if (currentPages == totalPages)
        {
            <a href="#" class="disabled rounded">&raquo;</a>
        }
        else
        {
            <a href="@Url.Action("Index", new { loai = loais, page = currentPages + 1 })" class="rounded">&raquo;</a>
        }
    </div>
</div>
@* End pagination *@

